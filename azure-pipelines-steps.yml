
variables:
  buildConfiguration: 'Release'
  
steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.1.300' # replace this value with the version that you need for your project

# - script: dotnet test ./Src/TDD-Kata/Args/Args-tests-csharp/Args-tests-csharp.csproj /p:CollectCoverage=true /p:Exclude="[xunit.runner.*]*" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./Coverage/
#   displayName: Run test & cover

# - script: cd ./Src/TDD-Kata/Args/Args-tests-csharp/Coverage && ls
#   displayName: List files !

# # Publish Code Coverage Results
# # Publish Cobertura or JaCoCo code coverage results from a build
# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'cobertura'
#     summaryFileLocation: './Src/TDD-Kata/Args/Args-tests-csharp/Coverage/coverage.cobertura.xml'
#     #reportDirectory: # Optional
#     #additionalCodeCoverageFiles: # Optional
#     #failIfCoverageEmpty: false # Optional


steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
- script: |
    mkdir $(Build.SourcesDirectory)\results
    dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura  ./Src/TDD-Kata/Args/Args-tests-csharp/Args-tests-csharp.csproj
    copy $(Build.SourcesDirectory)/Src/TDD-Kata/Args/Args-tests-csharp/coverage.cobertura.xml $(Build.SourcesDirectory)/results
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.0-rc4
    ./reportgenerator "-reports:$(Build.SourcesDirectory)/Src/TDD-Kata/Args/Args-tests-csharp/coverage.cobertura.xml" "-targetdir:results" "-reporttypes:HTMLInline;HTMLChart"
  displayName: 'Unit testing'
- task: PublishTestResults@2
  inputs:
    testRunner: xUnit
    testResultsFiles: '**/*.trx'
- task: PublishCodeCoverageResults@1
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)\results\coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)\results
    codecoverageTool: cobertura

- task: PublishBuildArtifacts@1
