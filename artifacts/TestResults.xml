<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\FizzBuzz-csharp.dll" total="47" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2015-05-26" time="08:59:32">
  <environment nunit-version="2.6.4.14350" clr-version="2.0.50727.8009" os-version="Microsoft Windows NT 6.2.9200.0" platform="Win32NT" cwd="C:\Users\Vincent\Documents\GITHUB\kata" machine-name="WINBOOKAIR" user="Vincent" user-domain="WINBOOKAIR" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Test Project" name="" executed="True" result="Success" success="True" time="2.168" asserts="0">
    <results>
      <test-suite type="Assembly" name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\FizzBuzz-csharp.dll" executed="True" result="Success" success="True" time="0.184" asserts="0">
        <results>
          <test-suite type="Namespace" name="FizzBuzz_csharp" executed="True" result="Success" success="True" time="0.171" asserts="0">
            <results>
              <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="0.170" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="FizzBuzzTests" executed="True" result="Success" success="True" time="0.169" asserts="0">
                    <results>
                      <test-suite type="ParameterizedTest" name="FizzBuzz_Should_Return_Buzz_When_NumberIsDivisibleBy5" executed="True" result="Success" success="True" time="0.123" asserts="0">
                        <results>
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Buzz_When_NumberIsDivisibleBy5(5)" executed="True" result="Success" success="True" time="0.101" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Buzz_When_NumberIsDivisibleBy5(10)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Buzz_When_NumberIsDivisibleBy5(20)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="FizzBuzz_Should_Return_Fizz_When_NumberIsDivisibleBy3" executed="True" result="Success" success="True" time="0.005" asserts="0">
                        <results>
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Fizz_When_NumberIsDivisibleBy3(3)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Fizz_When_NumberIsDivisibleBy3(6)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_Fizz_When_NumberIsDivisibleBy3(9)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="FizzBuzz_Should_Return_FizzBuzz_When_NumberIsDivisibleBy3And5" executed="True" result="Success" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_FizzBuzz_When_NumberIsDivisibleBy3And5(15)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_FizzBuzz_When_NumberIsDivisibleBy3And5(30)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_FizzBuzz_When_NumberIsDivisibleBy3And5(45)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite type="ParameterizedTest" name="FizzBuzz_Should_Return_NumberAsString" executed="True" result="Success" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_NumberAsString(1)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                          <test-case name="FizzBuzz_csharp.Tests.FizzBuzzTests.FizzBuzz_Should_Return_NumberAsString(2)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\FooBarQix-csharp.dll" executed="True" result="Success" success="True" time="0.171" asserts="0">
        <results>
          <test-suite type="Namespace" name="FooBarQix_csharp" executed="True" result="Success" success="True" time="0.161" asserts="0">
            <results>
              <test-suite type="TestFixture" name="FooBarQixTests" executed="True" result="Success" success="True" time="0.160" asserts="0">
                <results>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_DividerInOrder3_5_7" executed="True" result="Success" success="True" time="0.076" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_DividerInOrder3_5_7(21,&quot;fooqix&quot;)" executed="True" result="Success" success="True" time="0.071" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_DividerInOrder3_5_7_And_Then_WatchInOrder" executed="True" result="Success" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_DividerInOrder3_5_7_And_Then_WatchInOrder(15,&quot;foobarbar&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_DividerInOrder3_5_7_And_Then_WatchInOrder(33,&quot;foofoofoo&quot;)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_Return_NumberAsString" executed="True" result="Success" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_Return_NumberAsString(1)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_Return_NumberAsString(2)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WatchContentInOrder" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WatchContentInOrder(53,&quot;barfoo&quot;)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WatchDividerBeforeContent" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WatchDividerBeforeContent(51,&quot;foobar&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteBar_WhenNumberContains5" executed="True" result="Success" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteBar_WhenNumberContains5(52)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteBar_WhenNumberIsDivisibleBy5" executed="True" result="Success" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteBar_WhenNumberIsDivisibleBy5(10)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteBar_WhenNumberIsDivisibleBy5(20)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteFoo_WhenNumberContains3" executed="True" result="Success" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteFoo_WhenNumberContains3(13)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteFoo_WhenNumberContains3(23)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteFoo_WhenNumberIsDivisibleBy3" executed="True" result="Success" success="True" time="0.006" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteFoo_WhenNumberIsDivisibleBy3(6)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteFoo_WhenNumberIsDivisibleBy3(9)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteQix_WhenNumberContains7" executed="True" result="Success" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteQix_WhenNumberContains7(17)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteQix_WhenNumberContains7(47)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="FooBarQix_Should_WriteQix_WhenNumberIsDivisibleBy7" executed="True" result="Success" success="True" time="0.002" asserts="0">
                    <results>
                      <test-case name="FooBarQix_csharp.FooBarQixTests.FooBarQix_Should_WriteQix_WhenNumberIsDivisibleBy7(14)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\LeapYears-csharp.dll" executed="True" result="Success" success="True" time="0.076" asserts="0">
        <results>
          <test-suite type="Namespace" name="LeapYears_csharp" executed="True" result="Success" success="True" time="0.062" asserts="0">
            <results>
              <test-suite type="TestFixture" name="LeapYearsTests" executed="True" result="Success" success="True" time="0.061" asserts="0">
                <results>
                  <test-suite type="ParameterizedTest" name="IsLeapYear_Should_Return_False_WhenYearIsDivisibleBy100" executed="True" result="Success" success="True" time="0.027" asserts="0">
                    <results>
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_False_WhenYearIsDivisibleBy100(100)" executed="True" result="Success" success="True" time="0.018" asserts="1" />
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_False_WhenYearIsDivisibleBy100(200)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="IsLeapYear_Should_Return_FalseByDefault" executed="True" result="Success" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_FalseByDefault(1)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_FalseByDefault(2)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_FalseByDefault(3)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy4" executed="True" result="Success" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy4(12)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy4(16)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy400" executed="True" result="Success" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy400(400)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                      <test-case name="LeapYears_csharp.LeapYearsTests.IsLeapYear_Should_Return_True_WhenYearIsDivisibleBy400(800)" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="Assembly" name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\nunit.framework.dll" executed="True" result="Inconclusive" success="False" time="0.012" asserts="0" />
      <test-suite type="Assembly" name="C:\Users\Vincent\Documents\GITHUB\kata\artifacts\StringCalculator-csharp.dll" executed="True" result="Success" success="True" time="0.164" asserts="0">
        <results>
          <test-suite type="Namespace" name="StringCalculator_csharp" executed="True" result="Success" success="True" time="0.152" asserts="0">
            <results>
              <test-suite type="TestFixture" name="StringCalculatorTests" executed="True" result="Success" success="True" time="0.151" asserts="0">
                <results>
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_Handle_CommasAndNewLine" executed="True" result="Success" success="True" time="0.090" asserts="1" />
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_Handle_SpecifiedSeparator" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_HandleManyNumbers" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-suite type="ParameterizedTest" name="Add_Should_IgnoreNumber_When_GreaterThan1000" executed="True" result="Success" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_IgnoreNumber_When_GreaterThan1000(&quot;1001,2&quot;)" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_Return0_When_InputIsNullOrEmpty" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_ReturnSum_When_InputIs2Numbers" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_ReturnSum_When_InputIsOneNumber" executed="True" result="Success" success="True" time="0.001" asserts="1" />
                  <test-suite type="ParameterizedTest" name="Add_Should_Throw_NegativesNotAllowed_when_AnyNegativeNumver" executed="True" result="Success" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_Throw_NegativesNotAllowed_when_AnyNegativeNumver(&quot;-1,2&quot;,&quot;Negatives not allowed: -1&quot;)" executed="True" result="Success" success="True" time="0.009" asserts="2" />
                      <test-case name="StringCalculator_csharp.StringCalculatorTests.Add_Should_Throw_NegativesNotAllowed_when_AnyNegativeNumver(&quot;2,-4,3,-5&quot;,&quot;Negatives not allowed: -4,-5&quot;)" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-case name="StringCalculator_csharp.StringCalculatorTests.ExtractDelimiter_Should_AddDelimiterToList" executed="True" result="Success" success="True" time="0.001" asserts="3" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>